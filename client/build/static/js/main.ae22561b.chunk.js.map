{"version":3,"sources":["firebase.js","contexts/AuthContext.jsx","components/PrivateRoute.jsx","components/Header.jsx","components/Footer.jsx","components/Edit.jsx","components/Note.jsx","components/CreateArea.jsx","components/TodoApp.jsx","components/Signup.jsx","components/Dashboard.jsx","components/Login.jsx","components/ForgotPassword.jsx","components/UpdateProfile.jsx","components/Auth.jsx","components/App.jsx","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updateName","name","updateProfile","displayName","Provider","PrivateRoute","Component","component","rest","render","props","to","Header","fontSize","className","Footer","year","Date","getFullYear","Edit","title","content","id","edit","setEdit","handleChange","event","target","prevEdit","tabIndex","type","onClick","onChange","cols","rows","onEdit","Note","onDelete","CreateArea","userId","uid","note","setNote","prevNote","isTyping","setIsTyping","placeholder","style","display","Zoom","in","Fab","onAdd","preventDefault","TodoApp","notes","setNotes","isEdit","setIsEdit","updateNote","a","fetch","response","json","jsonData","console","log","error","message","editNote","data","method","headers","body","JSON","stringify","deleteNote","prevNotes","filter","noteItem","_id","newNote","map","index","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","setError","history","useHistory","handleSubmit","e","current","push","Card","Body","Alert","variant","Form","onSubmit","Group","Label","Control","ref","required","Button","disabled","height","Dashboard","isPointed","setIsPointed","handleLogout","minWidth","minHeight","backgroundColor","borderColor","marginLeft","color","onMouseOver","onMouseOut","marginTop","Login","ForgotPassword","setMessage","UpdateProfile","require","displayNameRef","promises","Promise","all","then","catch","finally","defaultValue","Auth","Container","maxWidth","exact","path","App","strict","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ae22561b.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport \"firebase/compat/auth\";\r\n//https://stackoverflow.com/questions/69241381/property-auth-does-not-exist-on-type-firebaseapp-on-react\r\n\r\n/*why use process.env no need require dotenv?\r\nOnly variables starting with REACT_APP_ are imported.\r\nhttps://tacomanator.medium.com/environments-with-create-react-app-7b645312c09d*/\r\nconst app = firebase.initializeApp({\r\n    // firebase config\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\n// for auth\r\nexport const auth = app.auth()\r\n// to use firebase in general project\r\nexport default app\r\n\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../firebase'\r\n\r\n\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    // use firebase to set cUser\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Return Promise<firebase.auth.UserCredential>\r\n    // to be used in signup.jsx\r\n    // 1. Sign up \r\n    const signup  = (email, password) => {\r\n      return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    // 2. Login\r\n    const login = (email, password) => {\r\n      return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    // 3. Logout\r\n    const logout = () => {\r\n      return auth.signOut();\r\n    }\r\n    \r\n    // 4. Reset Pw\r\n    const resetPassword = (email) => {\r\n      return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    // 5. Update Dashboard\r\n    const updateEmail = (email) => {\r\n      return currentUser.updateEmail(email)\r\n    }\r\n\r\n    const updatePassword = (password) => {\r\n      return currentUser.updatePassword(password)\r\n    }\r\n\r\n    const updateName = (name) => {\r\n      return currentUser.updateProfile({\r\n        displayName: name\r\n      });\r\n    }\r\n    useEffect(() => {\r\n      //onAuthSC return a function to unsub user\r\n      //mount\r\n      const unsubscribe = auth.onAuthStateChanged(user =>{\r\n        setCurrentUser(user)\r\n        setLoading(false)\r\n      });\r\n      //only return when unmount (stop rendering?)\r\n      return unsubscribe;\r\n    \r\n    }, [])\r\n\r\n    // render value inside context\r\n\r\n    const value ={\r\n      currentUser,\r\n      signup,\r\n      login,\r\n      logout,\r\n      resetPassword,\r\n      updateEmail,\r\n      updatePassword,\r\n      updateName\r\n    }\r\n\r\n    return (\r\n      // return currentUser to provider in order to use it anywhere\r\n      // in our app\r\n      <AuthContext.Provider value={value}>\r\n        {/* render children when done loading */}\r\n        {!loading && children}\r\n      </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","//* Private Route is to prevent user to enter dashboard without auth\r\nimport React from 'react'\r\nimport { Route, Redirect } from 'react-router'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n//* Wrapper of current route\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    \r\n    const { currentUser } = useAuth()\r\n    \r\n    return (\r\n        <Route\r\n          {...rest} /* all of the rest of props routes */\r\n          render={props => {\r\n              return currentUser ? <Component {...props} /> : \r\n              <Redirect to=\"/login\" />\r\n          }}\r\n        >\r\n        \r\n        </Route>\r\n        \r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from \"react\";\n\nimport WbIncandescentIcon from '@mui/icons-material/WbIncandescent';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Link } from \"react-router-dom\"\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        <WbIncandescentIcon fontSize=\"large\" />\n        Keeper\n      </h1>\n      <Link to=\"/\" \n        className=\"btn btn-primary w-10\">\n        <ArrowBackIcon />\n      </Link>\n      {/* <Button variant=\"dark\">\n        <Link to=\"/\">\n          <ArrowBackIcon />\n        </Link>\n      </Button> */}\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nconst phantomStyle = {\n  display: \"block\",\n  padding: \"20px\",\n  height: \"60px\",\n  width: \"100%\",\n  \n};\n\nfunction Footer() {\n\n  const year = new Date().getFullYear();\n  return (\n    <footer className=\"footer\">\n      <div>Copyright ⓒ {year}</div>\n    </footer>\n  );\n}\n\nexport default Footer;\n\n// style={{pointerEvents: \"none\"}}","import React, { useState } from 'react';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst Edit = (props) => {\r\n    const [edit, setEdit] = useState({\r\n        title: props.title,\r\n        content: props.content,\r\n        id: props.id\r\n      });\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n    \r\n        setEdit((prevEdit) => {\r\n          return {\r\n            // overwrite value of each section \r\n            // by importing all value from prev, overwrite section that you make changes on\r\n            ...prevEdit,\r\n            [name]: value\r\n          };\r\n        });\r\n        \r\n    }  \r\n\r\n\r\n    const submitEdit = ()=>{\r\n        // if title and content remain unchanged, no need to update to server\r\n        if( edit.title!==props.title || edit.content!==props.content){\r\n            // save edited text in modal @ localhost 3000\r\n            setEdit(()=>{\r\n                return{\r\n                    ...edit\r\n                 }\r\n            })\r\n            // console.log(edit);\r\n            props.onEdit(edit)\r\n         }\r\n    }\r\n\r\n    const exitEdit = () => {\r\n        setEdit(()=>{\r\n          return{\r\n              title: props.title,\r\n              content: props.content\r\n          }  \r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"editModal\">\r\n            {/* id can't start with number */}\r\n            <div className=\"modal fade\" id={\"id\"+props.id} tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\"\r\n                aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\" >Edit</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" \r\n                            onClick={exitEdit}\r\n                            >\r\n                            </button>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"modal-body\">\r\n                                <h6 className=\"edit-title\">Title:</h6>\r\n                                <input \r\n                                className=\"editInput\" name=\"title\" \r\n                                type=\"text\" value={edit.title} \r\n                                onChange={handleChange} \r\n                                />\r\n                                <h6>Content:</h6>\r\n                                <textarea \r\n                                className=\"editInput\" name=\"content\" \r\n                                cols=\"58\" rows=\"10\"\r\n                                value={edit.content}\r\n                                onChange={handleChange}\r\n                                \r\n                                >\r\n                                \r\n                                </textarea>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                {/* <button type=\"button\" className=\"btn btn-secondary\"\r\n                                    data-bs-dismiss=\"modal\">Close</button> */}\r\n                                <button \r\n                                type=\"button\" className=\"btn btn-primary\"\r\n                                data-bs-dismiss=\"modal\" \r\n                                onClick={submitEdit}\r\n                                >\r\n                                Save changes\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button \r\n            className=\"editButton\" \r\n            data-bs-toggle=\"modal\" \r\n            data-bs-target={\"#id\"+props.id}\r\n            >\r\n                <EditIcon />\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edit\r\n","import React from \"react\";\nimport Edit from \"./Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n\nconst Note= (props) => {\n\n  const handleDelete = () => {\n    //pass back props.id to App using props.onDelete\n    props.onDelete(props.id);\n  }\n\n  const onEdit = (edit) =>{\n    props.onEdit(edit)\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button className=\"buttonDef\" onClick={handleDelete}>\n        <DeleteIcon />\n      </button>\n      \n      <Edit \n      title={props.title} \n      content={props.content}\n      id={props.id}\n      onEdit={onEdit}\n      />\n      \n      \n\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nfunction CreateArea(props) {\n  const { currentUser } = useAuth();\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\",\n    userId: currentUser.uid\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event) {\n    \n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\",\n      userId: currentUser.uid\n    });\n    event.preventDefault();\n  }\n\n  // Note edit effects\n  const [isTyping, setIsTyping] = useState(false);\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        <input\n          name=\"title\"\n          onChange={handleChange}\n          value={note.title}\n          placeholder=\"Title\"\n          style={{ display: !isTyping && \"none\" }}\n        />\n\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          onClick={() => setIsTyping(true)}\n          value={note.content}\n          placeholder={!isTyping? `Welcome ${currentUser.displayName||\"Mr. Anonymous\"}! Take a note here...`:\"Take a note...\"}\n          rows={isTyping ? 3 : 1}\n        />\n        <Zoom in={isTyping}>\n          <Fab onClick={submitNote}>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState, useEffect} from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nfunction TodoApp() {\n  const [notes, setNotes] = useState([]);\n  const { currentUser } = useAuth();\n  const [isEdit, setIsEdit] = useState(true)\n  // const [note, setNote] = useState({\n  //   title: \"\",\n  //   content: \"\"\n  // });\n  \n//! Retrive data from atlas\n//* GET\n  const updateNote = async() => { \n    try{\n\n    const response = await fetch(\"http://localhost:5000/todos\");\n    const jsonData = await response.json();\n    console.log(isEdit);\n    if(isEdit){\n      setNotes(jsonData);\n      setIsEdit(false);\n    }\n    // console.log(jsonData);\n    \n    }catch(err){\n    console.error(err.message);\n    }\n  }\n  \n  useEffect(() => {\n    updateNote() //must add () parenthesis as it may not exec without\n  },[notes,isEdit])        \n //add [] at second input of useEffect, so that useEffect \n //will only update when \n\n//! Manipulate data on atlas\n\n//* POST\n  const addNote = (newNote) => {\n\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    })\n    setIsEdit(true)\n    //add new note into atlas db\n    const data = {newNote} ; //must {dataToFetch} , wrap?\n      fetch(\"http://localhost:5000/todos\",{\n      method: \"POST\",\n      headers: {\"Content-Type\":\"application/json\"},\n      body: JSON.stringify(data) //must match headers\n    })\n    \n    \n      \n    // window.location=\"/todo-app\"\n    // console.log(notes);\n  }\n\n//* PUT\n  const editNote = (edit) => {\n    // console.log(edit);\n    try {\n      const data = {edit} ; //must {dataToFetch} , wrap?\n      setIsEdit(true);\n      fetch(`http://localhost:5000/todos/${edit.id}`,{\n       method: \"PUT\",\n       headers: {\"Content-Type\":\"application/json\"},\n       body: JSON.stringify(data) //must match headers\n      });  \n    } catch (error) {\n      console.error(error);\n    }\n\n\n    \n  }\n\n//* DELETE\n  //id is retrieve from Note.jsx onDelete\n  const deleteNote = (id) => {\n    // to update notes immediately, without retrieve data from db\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem) => {\n        return noteItem._id !== id;\n      });\n    });\n\n    // delete selected item in database atlas online\n    console.log(id);\n    fetch(`http://localhost:5000/todos/${id}`,{\n      method: \"DELETE\"\n    });\n    // console.log(deleteTodo)\n\n  }\n  \n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {/* Extract data from notes array */}\n      <div className=\"notesContainer\">\n        {notes.map((noteItem, index) => {\n          // console.log(noteItem)\n          if(noteItem.userId===currentUser.uid){\n          return (\n\n            <Note\n              key={index}\n              id={noteItem._id}\n              title={noteItem.title}\n              content={noteItem.content}  \n              onDelete={deleteNote}\n              onEdit={editNote}\n            />          \n          )} \n          })}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default TodoApp;\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst Signup = () => {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup, currentUser } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // validation check\r\n        if (passwordRef.current.value !== \r\n        passwordConfirmRef.current.value){\r\n            return setError('Passwords do not match! Please enter correct confirmation password')\r\n        }\r\n\r\n        try {\r\n          setError('')\r\n          setLoading(true) //to prevent user accidentally click multi times\r\n          await signup(emailRef.current.value, passwordRef.current.value)  \r\n          history.push(\"/\")\r\n        } catch (error) {\r\n            setError(\"Failed to create an account.\")\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4 mt-2\">\r\n                        Sign up\r\n                    </h2>\r\n                    {/* {currentUser.email} */}\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            {/* ref for POST value */}\r\n                            <Form.Control type=\"email\" \r\n                            ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            {/* ref for POST value */}\r\n                            <Form.Control type=\"password\" \r\n                            ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            {/* ref for POST value */}\r\n                            <Form.Control type=\"password\" \r\n                            ref={passwordConfirmRef} required />\r\n    \r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 text-center mt-3\" style={{height:\"50px\"}} type=\"submit\">\r\n                        Sign Up\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React, { useState } from 'react'\r\nimport { Card, Button, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext' \r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth() \r\n    const [isPointed, setIsPointed] = useState(false)\r\n    \r\n    //*logout from useAuth so easy to replace auth method(firebase) to other\r\n    const { history } = useHistory()\r\n\r\n    const handleLogout = async () => {\r\n        //TODO: \r\n        setError('')\r\n\r\n        try { \r\n          await logout()\r\n          history.push('/login')\r\n        } catch  {\r\n          setError('Failed to log out')\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n      <>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-3\">\r\n                Profile\r\n            </h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <strong>Nickname: </strong>{currentUser.displayName}<br />\r\n            <strong>Email: </strong>{currentUser.email}<br />\r\n            <strong>Apps: </strong><br />\r\n            <Link to=\"/todo-app\" \r\n              className=\"btn btn-primary mt-2\"\r\n              style={{minWidth:\"100px\", minHeight:\"100px\", backgroundColor:\"#f5ba13\", borderColor:\"black\", marginLeft:\"37%\",\r\n              color: isPointed? \"white\":\"grey\"\r\n              }}\r\n              onMouseOver={()=>setIsPointed(true)}\r\n              onMouseOut={()=>setIsPointed(false)}\r\n              >\r\n              <LightbulbIcon style={{minWidth:\"50px\",minHeight:\"50px\", marginTop:\"15px\"}} \r\n              />\r\n              <br />Keeper\r\n            </Link>\r\n            <Link to=\"/update-profile\" \r\n              className=\"btn btn-primary w-100 mt-3\">\r\n                Update Profile\r\n            </Link>\r\n\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            <Button variant=\"link\" onClick={handleLogout}>\r\n            Log Out</Button>\r\n        </div>\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nconst Login = () => {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login, currentUser } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n          setError('')\r\n          setLoading(true) //to prevent user accidentally click multi times\r\n          await login(emailRef.current.value, passwordRef.current.value)  \r\n          history.push(\"/\")\r\n        } catch (error) {\r\n            setError(\"Failed to sign in.\")\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4 mt-3\">\r\n                        Login\r\n                    </h2>\r\n                    {/* {currentUser.email} */}\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            {/* ref for POST value */}\r\n                            <Form.Control type=\"email\" \r\n                            ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label className=\"mt-1\">Password</Form.Label>\r\n                            {/* ref for POST value */}\r\n                            <Form.Control type=\"password\" \r\n                            ref={passwordRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100 text-center mt-3\" style={{height:\"50px\"}} type=\"submit\">\r\n                        Login\r\n                        </Button>\r\n\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst ForgotPassword = () => {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n          setMessage('')\r\n          setError('')\r\n          setLoading(true) //to prevent user accidentally click multi times\r\n          await resetPassword(emailRef.current.value)  \r\n          setMessage('Check your inbox for further instructions. ref: '\r\n          + emailRef.current.value)\r\n        } catch (error) {\r\n            setError(\"Failed to reset password.\")\r\n        }\r\n        setLoading(false)\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">\r\n                        Password Reset\r\n                    </h2>\r\n                    {/* {currentUser.email} */}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            {/* ref for POST value */}\r\n                            <Form.Control type=\"email\" \r\n                            ref={emailRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100 text-center mt-2\" type=\"submit\">Reset Password</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nconst supervillains = require(\"supervillains\")\r\n\r\nconst UpdateProfile = () => {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const displayNameRef = useRef()\r\n    const { currentUser, updateEmail, updatePassword, updateName } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // validation check\r\n        if (passwordRef.current.value !== \r\n        passwordConfirmRef.current.value){\r\n            return setError('Passwords do not match! Please enter correct confirmation password')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n\r\n        if (displayNameRef.current.value !== currentUser.displayName){\r\n            promises.push(updateName(displayNameRef.current.value))\r\n        }\r\n\r\n        if (emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n\r\n        if (passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(()=>{\r\n          history.push('/')\r\n        }).catch(()=>{\r\n          setError('Failed to update account')\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">\r\n                        Update Profile\r\n                    </h2>\r\n                    {/* {currentUser.email} */}\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"displayName\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            {/* ref for POST value */}\r\n                            <Form.Control type=\"displayName\" \r\n                            defaultValue={currentUser.displayName}\r\n                            placeholder=\"Please enter your name\"\r\n                            ref={displayNameRef} />\r\n                        </Form.Group>                    \r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            {/* ref for POST value */}\r\n                            <Form.Control type=\"email\" \r\n                            defaultValue={currentUser.email}\r\n                            ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            {/* ref for POST value */}\r\n                            <Form.Control type=\"password\" \r\n                            placeholder=\"Leave blank to keep the same\"\r\n                            ref={passwordRef} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            {/* ref for POST value */}\r\n                            <Form.Control type=\"password\" \r\n                            placeholder=\"Leave blank to keep the same\"\r\n                            ref={passwordConfirmRef} />\r\n    \r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 text-center mt-2\" type=\"submit\">Update</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UpdateProfile\r\n","import React from 'react'\r\nimport Signup from './Signup';\r\nimport { Container } from 'react-bootstrap';\r\nimport { AuthProvider } from '../contexts/AuthContext';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport TodoApp from './TodoApp'\r\nimport Dashboard from './Dashboard';\r\nimport Login from './Login';\r\nimport PrivateRoute from './PrivateRoute'\r\nimport ForgotPassword from './ForgotPassword';\r\nimport UpdateProfile from './UpdateProfile';\r\n\r\n\r\nconst Auth = () => {\r\n    return (\r\n      // <AuthProvider>\r\n      //   <Router>\r\n      \r\n      //       {/**exclude App route from Container so Auth css x apply */}\r\n      //       <PrivateRoute exact path=\"/todo-app\" component={TodoApp} /> \r\n          \r\n            <Container className=\"d-flex \r\n              align-items-center justify-content-center\" \r\n              style={{ minHeight: \"100vh\"}}\r\n              >\r\n\r\n              <div className=\"w-100\" style={{ maxWidth: \"400px\" }}> \r\n\r\n                {/* Must have exact root path else will load all */}\r\n              <Switch>\r\n                <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n                \r\n                <PrivateRoute exact path=\"/update-profile\" component={UpdateProfile} />\r\n                <Route exact path=\"/signup\" component={Signup} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n\r\n                <Route path=\"*\" component={()=>\"404 NOT FOUND\"} />\r\n              </Switch>  \r\n              </div>\r\n            </Container>\r\n            \r\n    //     </Router>\r\n    //  </AuthProvider>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import React from 'react'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport TodoApp from './TodoApp'\r\nimport { AuthProvider } from '../contexts/AuthContext';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Auth from './Auth';\r\n\r\nconst App = () => {\r\n    return (\r\n      <AuthProvider>\r\n        <Router>\r\n          <Switch>\r\n            \r\n            <PrivateRoute exact strict path=\"/todo-app\" component={TodoApp} />\r\n            <Auth />\r\n\r\n          </Switch>  \r\n        </Router>\r\n      </AuthProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n document.getElementById(\"root\")\n );\n"],"sourceRoot":""}